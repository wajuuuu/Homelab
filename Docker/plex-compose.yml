# Welcome to my Ultimate Plex Stack!

# I was hoping this could maybe help some people out when setting up their stack
#
# Environment Variable Examples:
# PUID = 99
# GUID = 101
# TZ = America/Edmonton
# BASE_PATH = /home/username/docker
#
# https://trash-guides.info/Hardlinks/Hardlinks-and-Instant-Moves/ # This can be useful for establishing how the media will be presented below
# MEDIA_SHARE = /mnt/media   # This can also be renamed to "SHARE" or "MEDIA" this is where you will present your media
#
# NOTE: This is not a plug and play solution, some research / customization will be required to make this work as intented
# Feel free to customize ie: remove/change/add containers as needed - one size does not fit all

---
version: "3.0"
      
services:
  #Plex - used to display the media
  #
  #This can also be replaced by Emby/Jellyfin
  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    network_mode: host
    environment:
      - PUID=${PUID}
      - PGID=${GUID}
      - TZ=${TZ}
      - VERSION=docker
      - PLEX_CLAIM=${PLEX_CLAIM}
    ports:
      - 32400:32400
    devices:
     - /dev/dri:/dev/dri #Required for plex HW transcoding / QuickSync
    volumes:
      - ${BASE_PATH}/plex/config:/config
      - ${MEDIA_SHARE}/tv:/tv
      - ${MEDIA_SHARE}/movies:/movies
    restart: unless-stopped
    
  #Radarr - used to find movies automatically
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=${PUID}
      - PGID=${GUID}
      - TZ=${TZ}
    volumes:
      - ${BASE_PATH}/radarr/config:/config
      - ${MEDIA_SHARE}/movies:/movies #Access to the entire share
      - ${MEDIA_SHARE}/downloads:/downloads #Access to the entire share
    #networks: #Does not connect to overseer if you use NPM
    #  - proxy
    ports:
      - 7878:7878
    restart: unless-stopped
    
  #Sonarr - used to find tv shows automatically
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${GUID}
      - TZ=${TZ}
    volumes:
      - ${BASE_PATH}/sonarr/config:/config
      - ${MEDIA_SHARE}/tv:/tv
      - ${MEDIA_SHARE}/downloads:/downloads #Access to the entire share#Access to the entire share
    #networks: #Does not connect to overseer if you use NPM
    #  - proxy
    ports:
      - 8989:8989
    restart: unless-stopped
  
  #Readarr - Used to download books
  readarr:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    environment:
      - PUID=${PUID}
      - PGID=${GUID}
      - TZ=${TZ}
    volumes:
      - ${BASE_PATH}/readarr/config:/config
      - ${MEDIA_SHARE}/books:/books 

    ports:
      - 8787:8787
    restart: unless-stopped
    
  #Lidarr - Used to download music 
  #lidarr:
    #image: lscr.io/linuxserver/lidarr:latest
    #container_name: lidarr
    #environment:
      #- PUID=${PUID}
      #- PGID=${GUID}
      #- TZ=${TZ}
    #volumes:
      #- ${BASE_PATH}/lidarr/config:/config
      #- ${MEDIA_SHARE}:/video
    #ports:
      #- 8686:8686
    #restart: unless-stopped
    
  #Prowlarr - manages your Sonarr, Radarr and download client
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=${PUID}
      - PGID=${GUID}
      - TZ=${TZ}
    volumes:
      - ${BASE_PATH}/prowlarr/config:/config
    #networks:
    #  - proxy
    ports:
      - 9696:9696
    restart: unless-stopped

      
  #Qbittorent - torrenting software
  #
  #You can also use RuTorrent, Transmisson or Deluge
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=${PUID}
      - PGID=${GUID}
      - TZ=${TZ}
      - WEBUI_PORT=8080
      - TORRENTING_PORT=6881 #Make sure to port forward this port in your router so you can seed more effectively
    ports:
      - 8080:8080
      - 6881:6881
      - 6881:6881/udp
    volumes:
      - ${BASE_PATH}/qbittorent/config:/config
      - ${MEDIA_SHARE}/downloads:/downloads
    restart: unless-stopped

  #Tdarr - to transcode videos from one format to another like x265 or H.265
  #
  #This container requires a decent amount of horse power to run but will save space in the long run
  tdarr:
    container_name: tdarr
    image: ghcr.io/haveagitgat/tdarr:latest
    restart: unless-stopped
    ports:
      - 8265:8265 # webUI port
      - 8266:8266 # server port
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${GUID}
      - UMASK_SET=002
      - nodeName=ServerNode
      - serverIP=0.0.0.0
      - serverPort=8266
      - webUIPort=8265
      - internalNode=true
      - inContainer=true
      - ffmpegVersion=6
    volumes:
      - ${BASE_PATH}/tdarr/server:/app/server
      - ${BASE_PATH}/tdarr/configs:/app/configs
      - ${BASE_PATH}/tdarr/logs:/app/logs
      - ${MEDIA_SHARE}:/media
      - /transcode_cache:/temp
    devices:
     - /dev/dri:/dev/dri #Required for HW transcoding / QuickSync
     
      
  #Bazarr - for subtitles. Try to use SRT format if you can rather than PGS due to performance issues
  bazarr:
    container_name: bazarr
    image: lscr.io/linuxserver/bazarr:latest
    restart: unless-stopped
    environment:
      - PUID=${GUID}
      - PGID=${GUID}
      - TZ=${TZ}
    volumes:
      - ${BASE_PATH}/bazarr/config:/config
      - ${MEDIA_SHARE}/movies:/movies
      - ${MEDIA_SHARE}/tv:/tv
    ports:
      - 6767:6767

    
  #Plex Meta Manager - used to create collections in plex. Example: "Most Popular Movies This Week", "Best of horror", etc.
  plex-meta-manager:
    image: meisnate12/plex-meta-manager
    container_name: plex-meta-manager
    environment:
      - TZ=${TZ}
      #- PMM_OVERLAYS_ONLY=true #Tells PMM to run overlays only
      - PMM_CONFIG=/config/config.yml
      - PMM_RUN=true #Runs PMM Immediately
      #- PMM_RUN_LIBRARIES=Movies #Tells PMM to process only a library called "Movies"
    volumes:
      - ${BASE_PATH}/plex-meta-manager/config:/config
      
    restart: unless-stopped

  flaresolverr:
    # DockerHub mirror flaresolverr/flaresolverr:latest
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - TZ=Europe/London
    ports:
      - 8191:8191
    restart: unless-stopped